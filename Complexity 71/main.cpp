#include "SequenceGenerator.h"
#include <iostream>
#include <vector>
#include "ComplexityToDebruijn.h"

using namespace std;


int main(){
    time_t start, end;
    time(&start);
    int order = 7, complexity = 73;
    ComplexityToDebruijn C(complexity,order);
//
    SequenceGenerator seq(complexity - pow(2,order - 1));
    auto s = seq.getSequences();
    /*TODO:
    * automate the complexity choosing
    * remove rotations from sub sequences
    */
    s = C.removeRotations(s);
    cout << "For order "<< order << " complexity "<< complexity<< ":" << endl;
    for (const auto& i : s) {
        cout <<"Debruijn Sequences generated by the sub sequence:"<< i << " : " << endl;
        int seq_num = C.fromSubseqToDebruijn(i+i+i+i);
        cout << "the number of Debruijn sequences: " << seq_num << endl << endl;
    }
    cout << "number of subsequences with complexity " << complexity - pow(2,order - 1)<< " is: " << seq.getNumOfSeq() << endl;

    time(&end);

    cout << "overall execution time is " << end - start << " seconds" << endl;
}